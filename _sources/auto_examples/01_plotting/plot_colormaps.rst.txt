

.. _sphx_glr_auto_examples_01_plotting_plot_colormaps.py:


Matplotlib colormaps in Nilearn
================================

Visualize HCP connectome workbench color maps shipped with Nilearn
which can be used for plotting brain images on surface.

See :ref:`surface-plotting` for surface plotting details.



.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt

    from nilearn.plotting.cm import _cmap_d as nilearn_cmaps







Plot color maps
----------------



.. code-block:: python


    nmaps = len(nilearn_cmaps)
    a = np.outer(np.arange(0, 1, 0.01), np.ones(10))

    # Initialize the figure
    plt.figure(figsize=(10, 4.2))
    plt.subplots_adjust(top=0.4, bottom=0.05, left=0.01, right=0.99)

    for index, cmap in enumerate(nilearn_cmaps):
        plt.subplot(1, nmaps + 1, index + 1)
        plt.imshow(a, cmap=nilearn_cmaps[cmap])
        plt.axis('off')
        plt.title(cmap, fontsize=10, va='bottom', rotation=90)




.. image:: /auto_examples/01_plotting/images/sphx_glr_plot_colormaps_001.png
    :align: center




Plot matplotlib color maps
--------------------------



.. code-block:: python

    plt.figure(figsize=(10, 5))
    plt.subplots_adjust(top=0.8, bottom=0.05, left=0.01, right=0.99)
    deprecated_cmaps = ['Vega10', 'Vega20', 'Vega20b', 'Vega20c', 'spectral']
    m_cmaps = []
    for m in plt.cm.datad:
        if not m.endswith("_r") and m not in deprecated_cmaps:
            m_cmaps.append(m)
    m_cmaps.sort()

    for index, cmap in enumerate(m_cmaps):
        plt.subplot(1, len(m_cmaps) + 1, index + 1)
        plt.imshow(a, cmap=plt.get_cmap(cmap), aspect='auto')
        plt.axis('off')
        plt.title(cmap, fontsize=10, va='bottom', rotation=90)

    plt.show()



.. image:: /auto_examples/01_plotting/images/sphx_glr_plot_colormaps_002.png
    :align: center




**Total running time of the script:** ( 0 minutes  3.107 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_colormaps.py <plot_colormaps.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_colormaps.ipynb <plot_colormaps.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
