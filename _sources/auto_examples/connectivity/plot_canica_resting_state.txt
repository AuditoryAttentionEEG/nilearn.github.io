

.. _example_connectivity_plot_canica_resting_state.py:


Group analysis of resting-state fMRI with ICA: CanICA
=====================================================

An example applying CanICA to resting-state data. This example applies it
to 40 subjects of the ADHD200 datasets.

CanICA is an ICA method for group-level analysis of fMRI data. Compared
to other strategies, it brings a well-controlled group model, as well as a
thresholding algorithm controlling for specificity and sensitivity with
an explicit model of the signal. The reference papers are:

    * G. Varoquaux et al. "A group model for stable multi-subject ICA on
      fMRI datasets", NeuroImage Vol 51 (2010), p. 288-299

    * G. Varoquaux et al. "ICA-based sparse features recovery from fMRI
      datasets", IEEE ISBI 2010, p. 1177

Pre-prints for both papers are available on hal
(http://hal.archives-ouvertes.fr)



.. rst-class:: horizontal


    *

      .. image:: images/plot_canica_resting_state_1.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_2.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_3.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_4.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_5.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_6.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_7.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_8.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_9.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_10.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_11.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_12.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_13.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_14.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_15.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_16.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_17.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_18.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_19.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_20.png
            :scale: 47


**Script output**:

.. rst-class:: max_height

 ::

    [MultiNiftiMasker.fit] Loading data from [/home/lesteve/nilearn_data/adhd/data/3902469/3902469_rest_tshift_RPI_voreg_mni.nii.gz, /home/lesteve/nilearn_data/adhd/data/7774305/7774305_rest_tshift_RPI_voreg_mni.nii.gz, /home/lesteve/nilearn_dat
  [MultiNiftiMasker.fit] Computing mask
  [Memory]    0.0s, 0.0min: Loading compute_multi_epi_mask...
  ______________________________compute_multi_epi_mask cache loaded - 0.0s, 0.0min
  [MultiNiftiMasker.transform] Resampling mask
  [Memory]    0.0s, 0.0min: Loading resample_img...
  ________________________________________resample_img cache loaded - 0.0s, 0.0min
  [Memory]   85.8s, 1.4min: Loading unmask...
  ______________________________________________unmask cache loaded - 0.0s, 0.0min



**Python source code:** :download:`plot_canica_resting_state.py <plot_canica_resting_state.py>`

.. literalinclude:: plot_canica_resting_state.py
    :lines: 22-

**Total running time of the example:**  88.21 seconds 
( 1 minutes  28.21 seconds)
    