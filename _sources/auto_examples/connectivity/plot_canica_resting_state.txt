

.. _example_connectivity_plot_canica_resting_state.py:


Group analysis of resting-state fMRI with ICA: CanICA
=====================================================

An example applying CanICA to resting-state data. This example applies it
to 40 subjects of the ADHD200 datasets.

CanICA is an ICA method for group-level analysis of fMRI data. Compared
to other strategies, it brings a well-controlled group model, as well as a
thresholding algorithm controlling for specificity and sensitivity with
an explicit model of the signal. The reference papers are:

    * G. Varoquaux et al. "A group model for stable multi-subject ICA on
      fMRI datasets", NeuroImage Vol 51 (2010), p. 288-299

    * G. Varoquaux et al. "ICA-based sparse features recovery from fMRI
      datasets", IEEE ISBI 2010, p. 1177

Pre-prints for both papers are available on hal
(http://hal.archives-ouvertes.fr)



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: images/plot_canica_resting_state_001.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_002.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_003.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_004.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_005.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_006.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_007.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_008.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_009.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_010.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_011.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_012.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_013.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_014.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_015.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_016.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_017.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_018.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_019.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_020.png
            :scale: 47


**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    First functional nifti image (4D) is at: /home/lesteve/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz
    [MultiNiftiMasker.fit] Loading data from [/home/lesteve/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz, /home/lesteve/nilearn_data/adhd/data/0010064/0010064_rest_tshift_RPI_voreg_mni.nii.gz, /home/lesteve/nilearn_dat
    [MultiNiftiMasker.fit] Computing mask
    [Memory]    0.0s, 0.0min: Loading compute_multi_epi_mask...
    ______________________________compute_multi_epi_mask cache loaded - 0.0s, 0.0min
    [MultiNiftiMasker.transform] Resampling mask
    ________________________________________________________________________________
    [Memory] Calling nilearn.image.resampling.resample_img...
    resample_img(<nibabel.nifti1.Nifti1Image object at 0x7f9afc1bbf90>, target_shape=None, target_affine=None, copy=False, interpolation='nearest')
    _____________________________________________________resample_img - 0.0s, 0.0min
    [CanICA.fit] Resampling
    [CanICA.fit] Loading data from Nifti1Image('/home/lesteve/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz')
    [CanICA.fit] Masking and smoothing
    [CanICA.fit] Cleaning signal
    [Memory]    0.6s, 0.0min: Loading randomized_svd from nilearn_cache/joblib/sklearn/utils/extmath/randomized_svd/fc9d8b5ed60fb6502d9df8dccc1a2e39
    ______________________________________randomized_svd cache loaded - 0.0s, 0.0min
    ________________________________________________________________________________
    [Memory] Calling nilearn.masking.unmask...
    unmask(array([[-0.     , ..., -0.00602],
           ..., 
           [ 0.     , ...,  0.     ]]), 
    <nibabel.nifti1.Nifti1Image object at 0x7f9afc1bbf90>)
    ___________________________________________________________unmask - 0.1s, 0.0min


**Python source code:** :download:`plot_canica_resting_state.py <plot_canica_resting_state.py>`

.. literalinclude:: plot_canica_resting_state.py
    :lines: 22-

**Total running time of the example:**  73.76 seconds
( 1 minutes  13.76 seconds)
    