

.. _example_connectivity_plot_probabilistic_atlas_extraction.py:


Extracting signals of a probabilistic atlas of rest functional regions
========================================================================

This example extracts the signal on regions defined via a probabilistic
atlas, to construct a functional connectome.

We use the `MSDL atlas
<https://team.inria.fr/parietal/research/spatial_patterns/spatial-patterns-in-resting-state/>`_
of functional regions in rest.

The key to extract signals is to use the
:class:`nilearn.input_data.NiftiMapsMasker` that can transform nifti
objects to time series using a probabilistic atlas.

As the MSDL atlas comes with (x, y, z) MNI coordinates for the different
regions, we can visualize the matrix as a graph of interaction in a
brain. To avoid having too dense a graph, we represent only the 20% edges
with the highest values.




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: images/plot_probabilistic_atlas_extraction_001.png
            :scale: 47

    *

      .. image:: images/plot_probabilistic_atlas_extraction_002.png
            :scale: 47


**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    First subject resting-state nifti image (4D) is located at: /home/varoquau/nilearn_data/adhd/data/3902469/3902469_rest_tshift_RPI_voreg_mni.nii.gz
    [NiftiMapsMasker.fit_transform] loading regions from /home/varoquau/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii
    [NiftiMapsMasker.fit_transform] loading images from /home/varoquau/nilearn_data/adhd/data/3902469/3902469_rest_tshift_RPI_voreg_mni.nii.gz
    [NiftiMapsMasker.fit_transform] resampling labels
    [Memory]    0.0s, 0.0min: Loading resample_img...
    ________________________________________resample_img cache loaded - 0.2s, 0.0min
    [NiftiMapsMasker.fit_transform] extracting region signals
    [Memory]    0.3s, 0.0min: Loading img_to_signals_maps...
    _________________________________img_to_signals_maps cache loaded - 0.0s, 0.0min
    [NiftiMapsMasker.fit_transform] cleaning extracted signals
    ________________________________________________________________________________
    [Memory] Calling nilearn.signal.clean...
    clean(array([[ 35332.876159, ...,  37750.492014],
           ..., 
           [ 35038.924687, ...,  37643.851985]]), standardize=True, detrend=False, confounds=['/home/varoquau/nilearn_data/adhd/data/3902469/3902469_regressors.csv'], low_pass=None, t_r=None, high_pass=None)
    ____________________________________________________________clean - 0.0s, 0.0min


**Python source code:** :download:`plot_probabilistic_atlas_extraction.py <plot_probabilistic_atlas_extraction.py>`

.. literalinclude:: plot_probabilistic_atlas_extraction.py
    :lines: 22-

**Total running time of the example:**  1.52 seconds
( 0 minutes  1.52 seconds)
    