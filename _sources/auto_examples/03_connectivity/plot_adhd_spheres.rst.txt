

.. _sphx_glr_auto_examples_03_connectivity_plot_adhd_spheres.py:


Extracting brain signal from spheres
====================================

This example extract brain signals from spheres described by the coordinates
of their center in MNI space and a given radius in millimeters. In particular,
this example extracts signals from Default Mode Network regions and compute a
connectome from them.



Retrieve the dataset
---------------------



.. code-block:: python

    from nilearn import datasets
    adhd_dataset = datasets.fetch_adhd(n_subjects=1)

    # print basic information on the dataset
    print('First subject functional nifti image (4D) is at: %s' %
          adhd_dataset.func[0])  # 4D data






.. rst-class:: sphx-glr-script-out

 Out::

    First subject functional nifti image (4D) is at: /home/kamalakar/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz


Coordinates of Default Mode Network
------------------------------------



.. code-block:: python

    dmn_coords = [(0, -52, 18), (-46, -68, 32), (46, -68, 32), (1, 50, -5)]
    labels = [
              'Posterior Cingulate Cortex',
              'Left Temporoparietal junction',
              'Right Temporoparietal junction',
              'Medial prefrontal cortex',
             ]








Extracts signal from sphere around DMN seeds
---------------------------------------------



.. code-block:: python

    from nilearn import input_data

    masker = input_data.NiftiSpheresMasker(
        dmn_coords, radius=8,
        detrend=True, standardize=True,
        low_pass=0.1, high_pass=0.01, t_r=2.5,
        memory='nilearn_cache', memory_level=1, verbose=2)

    func_filename = adhd_dataset.func[0]
    confound_filename = adhd_dataset.confounds[0]

    time_series = masker.fit_transform(func_filename,
                                       confounds=[confound_filename])





.. rst-class:: sphx-glr-script-out

 Out::

    [Memory]    0.0s, 0.0min: Loading filter_and_extract...


Display time series
--------------------



.. code-block:: python

    import matplotlib.pyplot as plt
    for time_serie, label in zip(time_series.T, labels):
        plt.plot(time_serie, label=label)

    plt.title('Default Mode Network Time Series')
    plt.xlabel('Scan number')
    plt.ylabel('Normalized signal')
    plt.legend()
    plt.tight_layout()





.. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_adhd_spheres_001.png
    :align: center




Compute partial correlation matrix
-----------------------------------
Using object :class:`nilearn.connectome.ConnectivityMeasure`: Its
default covariance estimator is Ledoit-Wolf, allowing to obtain accurate
partial correlations.



.. code-block:: python

    from nilearn.connectome import ConnectivityMeasure
    connectivity_measure = ConnectivityMeasure(kind='partial correlation')
    partial_correlation_matrix = connectivity_measure.fit_transform(
        [time_series])[0]







Display connectome
-------------------



.. code-block:: python

    from nilearn import plotting

    plotting.plot_connectome(partial_correlation_matrix, dmn_coords,
                             title="Default Mode Network Connectivity")




.. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_adhd_spheres_002.png
    :align: center




Display connectome with hemispheric projections.
Notice (0, -52, 18) is included in both hemispheres since x == 0.



.. code-block:: python

    plotting.plot_connectome(partial_correlation_matrix, dmn_coords,
                             title="Connectivity projected on hemispheres",
                             display_mode='lyrz')

    plotting.show()



.. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_adhd_spheres_003.png
    :align: center




**Total running time of the script:** ( 0 minutes  1.771 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_adhd_spheres.py <plot_adhd_spheres.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_adhd_spheres.ipynb <plot_adhd_spheres.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
