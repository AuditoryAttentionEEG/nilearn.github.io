

.. _example_plot_canica_resting_state.py:


Group analysis of resting-state fMRI with ICA: CanICA
=====================================================

An example applying CanICA to resting-state data. This example applies it
to 40 subjects of the ADHD200 datasets.

CanICA is an ICA method for group-level analysis of fMRI data. Compared
to other strategies, it brings a well-controlled group model, as well as a
thresholding algorithm controlling for specificity and sensitivity with
an explicit model of the signal. The reference papers are:

    * G. Varoquaux et al. "A group model for stable multi-subject ICA on
      fMRI datasets", NeuroImage Vol 51 (2010), p. 288-299

    * G. Varoquaux et al. "ICA-based sparse features recovery from fMRI
      datasets", IEEE ISBI 2010, p. 1177

Pre-prints for both papers are available on hal
(http://hal.archives-ouvertes.fr)



.. rst-class:: horizontal


    *

      .. image:: images/plot_canica_resting_state_5.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_9.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_2.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_7.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_3.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_8.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_1.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_6.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_4.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_13.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_10.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_11.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_12.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_16.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_18.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_17.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_19.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_14.png
            :scale: 47

    *

      .. image:: images/plot_canica_resting_state_15.png
            :scale: 47


**Script output**:

.. rst-class:: max_height

 ::

    ________________________________________________________________________________
  [Memory] Calling nilearn.input_data.base_masker.filter_and_mask...
  filter_and_mask('/home/lesteve/code/nilearn/nilearn_data/adhd/data/9744150/9744150_rest_tshift_RPI_voreg_mni.nii.gz', 
  <nibabel.nifti1.Nifti1Image object at 0x2af990984f50>, { 'detrend': True,
    'high_pass': None,
    'low_pass': None,
    'smoothing_fwhm': 6.0,
    'standardize': True,
    't_r': None,
    'target_affine': None,
    'target_shape': None}, ref_memory_level=5, confounds=None, copy=True, verbose=10, memory='nilearn_cache')
  [CanICA.fit] Resampling
  [CanICA.fit] Loading data from Nifti1Image('/home/lesteve/code/nilearn/nilearn_data/adhd/data/9744150/9744150_rest_tshift_RPI_voreg_mni.nii.gz')
  [CanICA.fit] Masking and smoothing
  [CanICA.fit] Cleaning signal
  __________________________________________________filter_and_mask - 6.5s, 0.1min
  ________________________________________________________________________________
  [Memory] Calling nilearn.input_data.base_masker.filter_and_mask...
  filter_and_mask('/home/lesteve/code/nilearn/nilearn_data/adhd/data/1562298/1562298_rest_tshift_RPI_voreg_mni.nii.gz', 
  <nibabel.nifti1.Nifti1Image object at 0x2af990984f50>, { 'detrend': True,
    'high_pass': None,
    'low_pass': None,
    'smoothing_fwhm': 6.0,
    'standardize': True,
    't_r': None,
    'target_affine': None,
    'target_shape': None}, ref_memory_level=5, confounds=None, copy=True, verbose=10, memory='nilearn_cache')
  [CanICA.fit] Resampling
  [CanICA.fit] Loading data from Nifti1Image('/home/lesteve/code/nilearn/nilearn_data/adhd/data/1562298/1562298_rest_tshift_RPI_voreg_mni.nii.gz')
  [CanICA.fit] Masking and smoothing
  [CanICA.fit] Cleaning signal
  __________________________________________________filter_and_mask - 7.9s, 0.1min
  ________________________________________________________________________________
  [Memory] Calling nilearn.input_data.base_masker.filter_and_mask...
  filter_and_mask('/home/lesteve/code/nilearn/nilearn_data/adhd/data/3205761/3205761_rest_tshift_RPI_voreg_mni.nii.gz', 
  <nibabel.nifti1.Nifti1Image object at 0x2af990984f50>, { 'detrend': True,
    'high_pass': None,
    'low_pass': None,
    'smoothing_fwhm': 6.0,
    'standardize': True,
    't_r': None,
    'target_affine': None,
    'target_shape': None}, ref_memory_level=5, confounds=None, copy=True, verbose=10, memory='nilearn_cache')
  [CanICA.fit] Resampling
  [CanICA.fit] Loading data from Nifti1Image('/home/lesteve/code/nilearn/nilearn_data/adhd/data/3205761/3205761_rest_tshift_RPI_voreg_mni.nii.gz')
  [CanICA.fit] Masking and smoothing
  [CanICA.fit] Cleaning signal
  __________________________________________________filter_and_mask - 7.7s, 0.1min
  ________________________________________________________________________________
  [Memory] Calling nilearn.input_data.base_masker.filter_and_mask...
  filter_and_mask('/home/lesteve/code/nilearn/nilearn_data/adhd/data/3624598/3624598_rest_tshift_RPI_voreg_mni.nii.gz', 
  <nibabel.nifti1.Nifti1Image object at 0x2af990984f50>, { 'detrend': True,
    'high_pass': None,
    'low_pass': None,
    'smoothing_fwhm': 6.0,
    'standardize': True,
    't_r': None,
    'target_affine': None,
    'target_shape': None}, ref_memory_level=5, confounds=None, copy=True, verbose=10, memory='nilearn_cache')
  [CanICA.fit] Resampling
  [CanICA.fit] Loading data from Nifti1Image('/home/lesteve/code/nilearn/nilearn_data/adhd/data/3624598/3624598_rest_tshift_RPI_voreg_mni.nii.gz')
  [CanICA.fit] Masking and smoothing
  [CanICA.fit] Cleaning signal
  __________________________________________________filter_and_mask - 8.1s, 0.1min



**Python source code:** :download:`plot_canica_resting_state.py <plot_canica_resting_state.py>`

.. literalinclude:: plot_canica_resting_state.py
    :lines: 22-

**Total running time of the example:**  115.47 seconds 
( 1 minutes  55.47 seconds)
    